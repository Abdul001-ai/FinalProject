"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa";
exports.ids = ["vendor-chunks/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/adapters/next/app.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/adapters/next/app.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NuqsAdapter: () => (/* binding */ NuqsAdapter)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ "(rsc)/./node_modules/.pnpm/next@15.3.5_@babel+core@7.2_59a685cecc86146db29560d6fd5f016c/node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js");

const NuqsAdapter = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call NuqsAdapter() from the server but NuqsAdapter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"C:\\Users\\Admin\\Desktop\\new\\cloudflare-workers-nextjs-saas-template\\node_modules\\.pnpm\\nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa\\node_modules\\nuqs\\dist\\adapters\\next\\app.js",
"NuqsAdapter",
);

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/adapters/next/app.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/adapters/next/app.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NuqsAdapter: () => (/* binding */ NuqsAdapter)\n/* harmony export */ });\n/* harmony import */ var _chunk_ZOGZRKNA_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chunk-ZOGZRKNA.js */ \"(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-ZOGZRKNA.js\");\n/* harmony import */ var _chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunk-5WWTJYGR.js */ \"(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-5WWTJYGR.js\");\n/* __next_internal_client_entry_do_not_use__ NuqsAdapter auto */ \n\n// src/adapters/next/app.ts\nvar NuqsAdapter = (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_0__.createAdapterProvider)(_chunk_ZOGZRKNA_js__WEBPACK_IMPORTED_MODULE_1__.useNuqsNextAppRouterAdapter);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbnVxc0AyLjQuM19uZXh0QDE1LjMuNV9AYmFiXzMxZGZkMjU0NGI4ODEzNWZiMTNlNDdjM2U0ODA3NGZhL25vZGVfbW9kdWxlcy9udXFzL2Rpc3QvYWRhcHRlcnMvbmV4dC9hcHAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O2lFQUVzRTtBQUNOO0FBRWhFLDJCQUEyQjtBQUMzQixJQUFJRSxjQUFjRCx5RUFBcUJBLENBQUNELDJFQUEyQkE7QUFFNUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5cXERlc2t0b3BcXG5ld1xcY2xvdWRmbGFyZS13b3JrZXJzLW5leHRqcy1zYWFzLXRlbXBsYXRlXFxub2RlX21vZHVsZXNcXC5wbnBtXFxudXFzQDIuNC4zX25leHRAMTUuMy41X0BiYWJfMzFkZmQyNTQ0Yjg4MTM1ZmIxM2U0N2MzZTQ4MDc0ZmFcXG5vZGVfbW9kdWxlc1xcbnVxc1xcZGlzdFxcYWRhcHRlcnNcXG5leHRcXGFwcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZU51cXNOZXh0QXBwUm91dGVyQWRhcHRlciB9IGZyb20gJy4uLy4uL2NodW5rLVpPR1pSS05BLmpzJztcbmltcG9ydCB7IGNyZWF0ZUFkYXB0ZXJQcm92aWRlciB9IGZyb20gJy4uLy4uL2NodW5rLTVXV1RKWUdSLmpzJztcblxuLy8gc3JjL2FkYXB0ZXJzL25leHQvYXBwLnRzXG52YXIgTnVxc0FkYXB0ZXIgPSBjcmVhdGVBZGFwdGVyUHJvdmlkZXIodXNlTnVxc05leHRBcHBSb3V0ZXJBZGFwdGVyKTtcblxuZXhwb3J0IHsgTnVxc0FkYXB0ZXIgfTtcbiJdLCJuYW1lcyI6WyJ1c2VOdXFzTmV4dEFwcFJvdXRlckFkYXB0ZXIiLCJjcmVhdGVBZGFwdGVyUHJvdmlkZXIiLCJOdXFzQWRhcHRlciJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/adapters/next/app.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-5WWTJYGR.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-5WWTJYGR.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   context: () => (/* binding */ context),\n/* harmony export */   createAdapterProvider: () => (/* binding */ createAdapterProvider),\n/* harmony export */   debug: () => (/* binding */ debug),\n/* harmony export */   error: () => (/* binding */ error),\n/* harmony export */   renderQueryString: () => (/* binding */ renderQueryString),\n/* harmony export */   useAdapter: () => (/* binding */ useAdapter),\n/* harmony export */   warn: () => (/* binding */ warn)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.3.5_@babel+core@7.2_59a685cecc86146db29560d6fd5f016c/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\n\n// src/errors.ts\nvar errors = {\n  303: \"Multiple adapter contexts detected. This might happen in monorepos.\",\n  404: \"nuqs requires an adapter to work with your framework.\",\n  409: \"Multiple versions of the library are loaded. This may lead to unexpected behavior. Currently using `%s`, but `%s` (via the %s adapter) was about to load on top.\",\n  414: \"Max safe URL length exceeded. Some browsers may not be able to accept this URL. Consider limiting the amount of state stored in the URL.\",\n  429: \"URL update rate-limited by the browser. Consider increasing `throttleMs` for key(s) `%s`. %O\",\n  500: \"Empty search params cache. Search params can't be accessed in Layouts.\",\n  501: \"Search params cache already populated. Have you called `parse` twice?\"\n};\nfunction error(code) {\n  return `[nuqs] ${errors[code]}\n  See https://err.47ng.com/NUQS-${code}`;\n}\n\n// src/url-encoding.ts\nfunction renderQueryString(search) {\n  if (search.size === 0) {\n    return \"\";\n  }\n  const query = [];\n  for (const [key, value] of search.entries()) {\n    const safeKey = key.replace(/#/g, \"%23\").replace(/&/g, \"%26\").replace(/\\+/g, \"%2B\").replace(/=/g, \"%3D\").replace(/\\?/g, \"%3F\");\n    query.push(`${safeKey}=${encodeQueryValue(value)}`);\n  }\n  const queryString = \"?\" + query.join(\"&\");\n  warnIfURLIsTooLong(queryString);\n  return queryString;\n}\nfunction encodeQueryValue(input) {\n  return input.replace(/%/g, \"%25\").replace(/\\+/g, \"%2B\").replace(/ /g, \"+\").replace(/#/g, \"%23\").replace(/&/g, \"%26\").replace(/\"/g, \"%22\").replace(/'/g, \"%27\").replace(/`/g, \"%60\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/[\\x00-\\x1F]/g, (char) => encodeURIComponent(char));\n}\nvar URL_MAX_LENGTH = 2e3;\nfunction warnIfURLIsTooLong(queryString) {\n  if (false) {}\n  if (typeof location === \"undefined\") {\n    return;\n  }\n  const url = new URL(location.href);\n  url.search = queryString;\n  if (url.href.length > URL_MAX_LENGTH) {\n    console.warn(error(414));\n  }\n}\n\n// src/debug.ts\nvar debugEnabled = isDebugEnabled();\nfunction debug(message, ...args) {\n  if (!debugEnabled) {\n    return;\n  }\n  const msg = sprintf(message, ...args);\n  performance.mark(msg);\n  try {\n    console.log(message, ...args);\n  } catch (error2) {\n    console.log(msg);\n  }\n}\nfunction warn(message, ...args) {\n  if (!debugEnabled) {\n    return;\n  }\n  console.warn(message, ...args);\n}\nfunction sprintf(base, ...args) {\n  return base.replace(/%[sfdO]/g, (match) => {\n    const arg = args.shift();\n    if (match === \"%O\" && arg) {\n      return JSON.stringify(arg).replace(/\"([^\"]+)\":/g, \"$1:\");\n    } else {\n      return String(arg);\n    }\n  });\n}\nfunction isDebugEnabled() {\n  try {\n    if (typeof localStorage === \"undefined\") {\n      return false;\n    }\n    const test = \"nuqs-localStorage-test\";\n    localStorage.setItem(test, test);\n    const isStorageAvailable = localStorage.getItem(test) === test;\n    localStorage.removeItem(test);\n    if (!isStorageAvailable) {\n      return false;\n    }\n  } catch (error2) {\n    console.error(\n      \"[nuqs]: debug mode is disabled (localStorage unavailable).\",\n      error2\n    );\n    return false;\n  }\n  const debug2 = localStorage.getItem(\"debug\") ?? \"\";\n  return debug2.includes(\"nuqs\");\n}\n\n// src/adapters/lib/context.ts\nvar context = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  useAdapter() {\n    throw new Error(error(404));\n  }\n});\ncontext.displayName = \"NuqsAdapterContext\";\nif (debugEnabled && typeof window !== \"undefined\") {\n  if (window.__NuqsAdapterContext && window.__NuqsAdapterContext !== context) {\n    console.error(error(303));\n  }\n  window.__NuqsAdapterContext = context;\n}\nfunction createAdapterProvider(useAdapter2) {\n  return ({ children, ...props }) => (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\n    context.Provider,\n    { ...props, value: { useAdapter: useAdapter2 } },\n    children\n  );\n}\nfunction useAdapter() {\n  const value = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);\n  if (!(\"useAdapter\" in value)) {\n    throw new Error(error(404));\n  }\n  return value.useAdapter();\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbnVxc0AyLjQuM19uZXh0QDE1LjMuNV9AYmFiXzMxZGZkMjU0NGI4ODEzNWZiMTNlNDdjM2U0ODA3NGZhL25vZGVfbW9kdWxlcy9udXFzL2Rpc3QvY2h1bmstNVdXVEpZR1IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBaUU7O0FBRWpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsa0NBQWtDLEtBQUs7QUFDdkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixRQUFRLEdBQUcsd0JBQXdCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLG9EQUFhO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvQkFBb0IsS0FBSyxvREFBYTtBQUNsRDtBQUNBLE1BQU0sbUJBQW1CLDJCQUEyQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixpREFBVTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU2RiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcRGVza3RvcFxcbmV3XFxjbG91ZGZsYXJlLXdvcmtlcnMtbmV4dGpzLXNhYXMtdGVtcGxhdGVcXG5vZGVfbW9kdWxlc1xcLnBucG1cXG51cXNAMi40LjNfbmV4dEAxNS4zLjVfQGJhYl8zMWRmZDI1NDRiODgxMzVmYjEzZTQ3YzNlNDgwNzRmYVxcbm9kZV9tb2R1bGVzXFxudXFzXFxkaXN0XFxjaHVuay01V1dUSllHUi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDb250ZXh0LCBjcmVhdGVFbGVtZW50LCB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuXG4vLyBzcmMvZXJyb3JzLnRzXG52YXIgZXJyb3JzID0ge1xuICAzMDM6IFwiTXVsdGlwbGUgYWRhcHRlciBjb250ZXh0cyBkZXRlY3RlZC4gVGhpcyBtaWdodCBoYXBwZW4gaW4gbW9ub3JlcG9zLlwiLFxuICA0MDQ6IFwibnVxcyByZXF1aXJlcyBhbiBhZGFwdGVyIHRvIHdvcmsgd2l0aCB5b3VyIGZyYW1ld29yay5cIixcbiAgNDA5OiBcIk11bHRpcGxlIHZlcnNpb25zIG9mIHRoZSBsaWJyYXJ5IGFyZSBsb2FkZWQuIFRoaXMgbWF5IGxlYWQgdG8gdW5leHBlY3RlZCBiZWhhdmlvci4gQ3VycmVudGx5IHVzaW5nIGAlc2AsIGJ1dCBgJXNgICh2aWEgdGhlICVzIGFkYXB0ZXIpIHdhcyBhYm91dCB0byBsb2FkIG9uIHRvcC5cIixcbiAgNDE0OiBcIk1heCBzYWZlIFVSTCBsZW5ndGggZXhjZWVkZWQuIFNvbWUgYnJvd3NlcnMgbWF5IG5vdCBiZSBhYmxlIHRvIGFjY2VwdCB0aGlzIFVSTC4gQ29uc2lkZXIgbGltaXRpbmcgdGhlIGFtb3VudCBvZiBzdGF0ZSBzdG9yZWQgaW4gdGhlIFVSTC5cIixcbiAgNDI5OiBcIlVSTCB1cGRhdGUgcmF0ZS1saW1pdGVkIGJ5IHRoZSBicm93c2VyLiBDb25zaWRlciBpbmNyZWFzaW5nIGB0aHJvdHRsZU1zYCBmb3Iga2V5KHMpIGAlc2AuICVPXCIsXG4gIDUwMDogXCJFbXB0eSBzZWFyY2ggcGFyYW1zIGNhY2hlLiBTZWFyY2ggcGFyYW1zIGNhbid0IGJlIGFjY2Vzc2VkIGluIExheW91dHMuXCIsXG4gIDUwMTogXCJTZWFyY2ggcGFyYW1zIGNhY2hlIGFscmVhZHkgcG9wdWxhdGVkLiBIYXZlIHlvdSBjYWxsZWQgYHBhcnNlYCB0d2ljZT9cIlxufTtcbmZ1bmN0aW9uIGVycm9yKGNvZGUpIHtcbiAgcmV0dXJuIGBbbnVxc10gJHtlcnJvcnNbY29kZV19XG4gIFNlZSBodHRwczovL2Vyci40N25nLmNvbS9OVVFTLSR7Y29kZX1gO1xufVxuXG4vLyBzcmMvdXJsLWVuY29kaW5nLnRzXG5mdW5jdGlvbiByZW5kZXJRdWVyeVN0cmluZyhzZWFyY2gpIHtcbiAgaWYgKHNlYXJjaC5zaXplID09PSAwKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbiAgY29uc3QgcXVlcnkgPSBbXTtcbiAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2Ygc2VhcmNoLmVudHJpZXMoKSkge1xuICAgIGNvbnN0IHNhZmVLZXkgPSBrZXkucmVwbGFjZSgvIy9nLCBcIiUyM1wiKS5yZXBsYWNlKC8mL2csIFwiJTI2XCIpLnJlcGxhY2UoL1xcKy9nLCBcIiUyQlwiKS5yZXBsYWNlKC89L2csIFwiJTNEXCIpLnJlcGxhY2UoL1xcPy9nLCBcIiUzRlwiKTtcbiAgICBxdWVyeS5wdXNoKGAke3NhZmVLZXl9PSR7ZW5jb2RlUXVlcnlWYWx1ZSh2YWx1ZSl9YCk7XG4gIH1cbiAgY29uc3QgcXVlcnlTdHJpbmcgPSBcIj9cIiArIHF1ZXJ5LmpvaW4oXCImXCIpO1xuICB3YXJuSWZVUkxJc1Rvb0xvbmcocXVlcnlTdHJpbmcpO1xuICByZXR1cm4gcXVlcnlTdHJpbmc7XG59XG5mdW5jdGlvbiBlbmNvZGVRdWVyeVZhbHVlKGlucHV0KSB7XG4gIHJldHVybiBpbnB1dC5yZXBsYWNlKC8lL2csIFwiJTI1XCIpLnJlcGxhY2UoL1xcKy9nLCBcIiUyQlwiKS5yZXBsYWNlKC8gL2csIFwiK1wiKS5yZXBsYWNlKC8jL2csIFwiJTIzXCIpLnJlcGxhY2UoLyYvZywgXCIlMjZcIikucmVwbGFjZSgvXCIvZywgXCIlMjJcIikucmVwbGFjZSgvJy9nLCBcIiUyN1wiKS5yZXBsYWNlKC9gL2csIFwiJTYwXCIpLnJlcGxhY2UoLzwvZywgXCIlM0NcIikucmVwbGFjZSgvPi9nLCBcIiUzRVwiKS5yZXBsYWNlKC9bXFx4MDAtXFx4MUZdL2csIChjaGFyKSA9PiBlbmNvZGVVUklDb21wb25lbnQoY2hhcikpO1xufVxudmFyIFVSTF9NQVhfTEVOR1RIID0gMmUzO1xuZnVuY3Rpb24gd2FybklmVVJMSXNUb29Mb25nKHF1ZXJ5U3RyaW5nKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB1cmwgPSBuZXcgVVJMKGxvY2F0aW9uLmhyZWYpO1xuICB1cmwuc2VhcmNoID0gcXVlcnlTdHJpbmc7XG4gIGlmICh1cmwuaHJlZi5sZW5ndGggPiBVUkxfTUFYX0xFTkdUSCkge1xuICAgIGNvbnNvbGUud2FybihlcnJvcig0MTQpKTtcbiAgfVxufVxuXG4vLyBzcmMvZGVidWcudHNcbnZhciBkZWJ1Z0VuYWJsZWQgPSBpc0RlYnVnRW5hYmxlZCgpO1xuZnVuY3Rpb24gZGVidWcobWVzc2FnZSwgLi4uYXJncykge1xuICBpZiAoIWRlYnVnRW5hYmxlZCkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBtc2cgPSBzcHJpbnRmKG1lc3NhZ2UsIC4uLmFyZ3MpO1xuICBwZXJmb3JtYW5jZS5tYXJrKG1zZyk7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2cobWVzc2FnZSwgLi4uYXJncyk7XG4gIH0gY2F0Y2ggKGVycm9yMikge1xuICAgIGNvbnNvbGUubG9nKG1zZyk7XG4gIH1cbn1cbmZ1bmN0aW9uIHdhcm4obWVzc2FnZSwgLi4uYXJncykge1xuICBpZiAoIWRlYnVnRW5hYmxlZCkge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zb2xlLndhcm4obWVzc2FnZSwgLi4uYXJncyk7XG59XG5mdW5jdGlvbiBzcHJpbnRmKGJhc2UsIC4uLmFyZ3MpIHtcbiAgcmV0dXJuIGJhc2UucmVwbGFjZSgvJVtzZmRPXS9nLCAobWF0Y2gpID0+IHtcbiAgICBjb25zdCBhcmcgPSBhcmdzLnNoaWZ0KCk7XG4gICAgaWYgKG1hdGNoID09PSBcIiVPXCIgJiYgYXJnKSB7XG4gICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoYXJnKS5yZXBsYWNlKC9cIihbXlwiXSspXCI6L2csIFwiJDE6XCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gU3RyaW5nKGFyZyk7XG4gICAgfVxuICB9KTtcbn1cbmZ1bmN0aW9uIGlzRGVidWdFbmFibGVkKCkge1xuICB0cnkge1xuICAgIGlmICh0eXBlb2YgbG9jYWxTdG9yYWdlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IHRlc3QgPSBcIm51cXMtbG9jYWxTdG9yYWdlLXRlc3RcIjtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0ZXN0LCB0ZXN0KTtcbiAgICBjb25zdCBpc1N0b3JhZ2VBdmFpbGFibGUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0ZXN0KSA9PT0gdGVzdDtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0ZXN0KTtcbiAgICBpZiAoIWlzU3RvcmFnZUF2YWlsYWJsZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IyKSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgIFwiW251cXNdOiBkZWJ1ZyBtb2RlIGlzIGRpc2FibGVkIChsb2NhbFN0b3JhZ2UgdW5hdmFpbGFibGUpLlwiLFxuICAgICAgZXJyb3IyXG4gICAgKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgY29uc3QgZGVidWcyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJkZWJ1Z1wiKSA/PyBcIlwiO1xuICByZXR1cm4gZGVidWcyLmluY2x1ZGVzKFwibnVxc1wiKTtcbn1cblxuLy8gc3JjL2FkYXB0ZXJzL2xpYi9jb250ZXh0LnRzXG52YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoe1xuICB1c2VBZGFwdGVyKCkge1xuICAgIHRocm93IG5ldyBFcnJvcihlcnJvcig0MDQpKTtcbiAgfVxufSk7XG5jb250ZXh0LmRpc3BsYXlOYW1lID0gXCJOdXFzQWRhcHRlckNvbnRleHRcIjtcbmlmIChkZWJ1Z0VuYWJsZWQgJiYgdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICBpZiAod2luZG93Ll9fTnVxc0FkYXB0ZXJDb250ZXh0ICYmIHdpbmRvdy5fX051cXNBZGFwdGVyQ29udGV4dCAhPT0gY29udGV4dCkge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IoMzAzKSk7XG4gIH1cbiAgd2luZG93Ll9fTnVxc0FkYXB0ZXJDb250ZXh0ID0gY29udGV4dDtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUFkYXB0ZXJQcm92aWRlcih1c2VBZGFwdGVyMikge1xuICByZXR1cm4gKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+IGNyZWF0ZUVsZW1lbnQoXG4gICAgY29udGV4dC5Qcm92aWRlcixcbiAgICB7IC4uLnByb3BzLCB2YWx1ZTogeyB1c2VBZGFwdGVyOiB1c2VBZGFwdGVyMiB9IH0sXG4gICAgY2hpbGRyZW5cbiAgKTtcbn1cbmZ1bmN0aW9uIHVzZUFkYXB0ZXIoKSB7XG4gIGNvbnN0IHZhbHVlID0gdXNlQ29udGV4dChjb250ZXh0KTtcbiAgaWYgKCEoXCJ1c2VBZGFwdGVyXCIgaW4gdmFsdWUpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGVycm9yKDQwNCkpO1xuICB9XG4gIHJldHVybiB2YWx1ZS51c2VBZGFwdGVyKCk7XG59XG5cbmV4cG9ydCB7IGNvbnRleHQsIGNyZWF0ZUFkYXB0ZXJQcm92aWRlciwgZGVidWcsIGVycm9yLCByZW5kZXJRdWVyeVN0cmluZywgdXNlQWRhcHRlciwgd2FybiB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-5WWTJYGR.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-6YKAEXDW.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-6YKAEXDW.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FLUSH_RATE_LIMIT_MS: () => (/* binding */ FLUSH_RATE_LIMIT_MS),\n/* harmony export */   enqueueQueryStringUpdate: () => (/* binding */ enqueueQueryStringUpdate),\n/* harmony export */   getQueuedValue: () => (/* binding */ getQueuedValue),\n/* harmony export */   resetQueue: () => (/* binding */ resetQueue),\n/* harmony export */   safeParse: () => (/* binding */ safeParse),\n/* harmony export */   scheduleFlushToURL: () => (/* binding */ scheduleFlushToURL)\n/* harmony export */ });\n/* harmony import */ var _chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-5WWTJYGR.js */ \"(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-5WWTJYGR.js\");\n\n\n// src/utils.ts\nfunction safeParse(parser, value, key) {\n  try {\n    return parser(value);\n  } catch (error2) {\n    (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_0__.warn)(\n      \"[nuqs] Error while parsing value `%s`: %O\" + (key ? \" (for key `%s`)\" : \"\"),\n      value,\n      error2,\n      key\n    );\n    return null;\n  }\n}\nfunction getDefaultThrottle() {\n  if (typeof window === \"undefined\") return 50;\n  const isSafari = Boolean(window.GestureEvent);\n  if (!isSafari) {\n    return 50;\n  }\n  try {\n    const match = navigator.userAgent?.match(/version\\/([\\d\\.]+) safari/i);\n    return parseFloat(match[1]) >= 17 ? 120 : 320;\n  } catch {\n    return 320;\n  }\n}\n\n// src/update-queue.ts\nvar FLUSH_RATE_LIMIT_MS = getDefaultThrottle();\nvar updateQueue = /* @__PURE__ */ new Map();\nvar queueOptions = {\n  history: \"replace\",\n  scroll: false,\n  shallow: true,\n  throttleMs: FLUSH_RATE_LIMIT_MS\n};\nvar transitionsQueue = /* @__PURE__ */ new Set();\nvar lastFlushTimestamp = 0;\nvar flushPromiseCache = null;\nfunction getQueuedValue(key) {\n  return updateQueue.get(key);\n}\nfunction resetQueue() {\n  updateQueue.clear();\n  transitionsQueue.clear();\n  queueOptions.history = \"replace\";\n  queueOptions.scroll = false;\n  queueOptions.shallow = true;\n  queueOptions.throttleMs = FLUSH_RATE_LIMIT_MS;\n}\nfunction enqueueQueryStringUpdate(key, value, serialize, options) {\n  const serializedOrNull = value === null ? null : serialize(value);\n  (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs queue] Enqueueing %s=%s %O\", key, serializedOrNull, options);\n  updateQueue.set(key, serializedOrNull);\n  if (options.history === \"push\") {\n    queueOptions.history = \"push\";\n  }\n  if (options.scroll) {\n    queueOptions.scroll = true;\n  }\n  if (options.shallow === false) {\n    queueOptions.shallow = false;\n  }\n  if (options.startTransition) {\n    transitionsQueue.add(options.startTransition);\n  }\n  queueOptions.throttleMs = Math.max(\n    options.throttleMs ?? FLUSH_RATE_LIMIT_MS,\n    Number.isFinite(queueOptions.throttleMs) ? queueOptions.throttleMs : 0\n  );\n  return serializedOrNull;\n}\nfunction getSearchParamsSnapshotFromLocation() {\n  return new URLSearchParams(location.search);\n}\nfunction scheduleFlushToURL({\n  getSearchParamsSnapshot = getSearchParamsSnapshotFromLocation,\n  updateUrl,\n  rateLimitFactor = 1\n}) {\n  if (flushPromiseCache === null) {\n    flushPromiseCache = new Promise((resolve, reject) => {\n      if (!Number.isFinite(queueOptions.throttleMs)) {\n        (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs queue] Skipping flush due to throttleMs=Infinity\");\n        resolve(getSearchParamsSnapshot());\n        setTimeout(() => {\n          flushPromiseCache = null;\n        }, 0);\n        return;\n      }\n      function flushNow() {\n        lastFlushTimestamp = performance.now();\n        const [search, error2] = flushUpdateQueue({\n          updateUrl,\n          getSearchParamsSnapshot\n        });\n        if (error2 === null) {\n          resolve(search);\n        } else {\n          reject(search);\n        }\n        flushPromiseCache = null;\n      }\n      function runOnNextTick() {\n        const now = performance.now();\n        const timeSinceLastFlush = now - lastFlushTimestamp;\n        const throttleMs = queueOptions.throttleMs;\n        const flushInMs = rateLimitFactor * Math.max(0, Math.min(throttleMs, throttleMs - timeSinceLastFlush));\n        (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\n          \"[nuqs queue] Scheduling flush in %f ms. Throttled at %f ms\",\n          flushInMs,\n          throttleMs\n        );\n        if (flushInMs === 0) {\n          flushNow();\n        } else {\n          setTimeout(flushNow, flushInMs);\n        }\n      }\n      setTimeout(runOnNextTick, 0);\n    });\n  }\n  return flushPromiseCache;\n}\nfunction flushUpdateQueue({\n  updateUrl,\n  getSearchParamsSnapshot\n}) {\n  const search = getSearchParamsSnapshot();\n  if (updateQueue.size === 0) {\n    return [search, null];\n  }\n  const items = Array.from(updateQueue.entries());\n  const options = { ...queueOptions };\n  const transitions = Array.from(transitionsQueue);\n  resetQueue();\n  (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_0__.debug)(\"[nuqs queue] Flushing queue %O with options %O\", items, options);\n  for (const [key, value] of items) {\n    if (value === null) {\n      search.delete(key);\n    } else {\n      search.set(key, value);\n    }\n  }\n  try {\n    compose(transitions, () => {\n      updateUrl(search, {\n        history: options.history,\n        scroll: options.scroll,\n        shallow: options.shallow\n      });\n    });\n    return [search, null];\n  } catch (err) {\n    console.error((0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_0__.error)(429), items.map(([key]) => key).join(), err);\n    return [search, err];\n  }\n}\nfunction compose(fns, final) {\n  const recursiveCompose = (index) => {\n    if (index === fns.length) {\n      return final();\n    }\n    const fn = fns[index];\n    if (!fn) {\n      throw new Error(\"Invalid transition function\");\n    }\n    fn(() => recursiveCompose(index + 1));\n  };\n  recursiveCompose(0);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-6YKAEXDW.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-ZOGZRKNA.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-ZOGZRKNA.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useNuqsNextAppRouterAdapter: () => (/* binding */ useNuqsNextAppRouterAdapter)\n/* harmony export */ });\n/* harmony import */ var _chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-5WWTJYGR.js */ \"(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-5WWTJYGR.js\");\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation.js */ \"(ssr)/./node_modules/.pnpm/next@15.3.5_@babel+core@7.2_59a685cecc86146db29560d6fd5f016c/node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.3.5_@babel+core@7.2_59a685cecc86146db29560d6fd5f016c/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\n\n\n\nfunction useNuqsNextAppRouterAdapter() {\n  const router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_0__.useRouter)();\n  const searchParams = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_0__.useSearchParams)();\n  const [optimisticSearchParams, setOptimisticSearchParams] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useOptimistic)(searchParams);\n  const updateUrl = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((search, options) => {\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.startTransition)(() => {\n      if (!options.shallow) {\n        setOptimisticSearchParams(search);\n      }\n      const url = renderURL(location.origin + location.pathname, search);\n      (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_2__.debug)(\"[nuqs queue (app)] Updating url: %s\", url);\n      const updateMethod = options.history === \"push\" ? history.pushState : history.replaceState;\n      updateMethod.call(\n        history,\n        // In next@14.1.0, useSearchParams becomes reactive to shallow updates,\n        // but only if passing `null` as the history state.\n        null,\n        \"\",\n        url\n      );\n      if (options.scroll) {\n        window.scrollTo(0, 0);\n      }\n      if (!options.shallow) {\n        router.replace(url, {\n          scroll: false\n        });\n      }\n    });\n  }, []);\n  return {\n    searchParams: optimisticSearchParams,\n    updateUrl,\n    // See: https://github.com/47ng/nuqs/issues/603#issuecomment-2317057128\n    // and https://github.com/47ng/nuqs/discussions/960#discussioncomment-12699171\n    rateLimitFactor: 3\n  };\n}\nfunction renderURL(base, search) {\n  const hashlessBase = base.split(\"#\")[0] ?? \"\";\n  const query = (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_2__.renderQueryString)(search);\n  const hash = location.hash;\n  return hashlessBase + query + hash;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbnVxc0AyLjQuM19uZXh0QDE1LjMuNV9AYmFiXzMxZGZkMjU0NGI4ODEzNWZiMTNlNDdjM2U0ODA3NGZhL25vZGVfbW9kdWxlcy9udXFzL2Rpc3QvY2h1bmstWk9HWlJLTkEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErRDtBQUNDO0FBQ0k7O0FBRXBFO0FBQ0EsaUJBQWlCLDZEQUFTO0FBQzFCLHVCQUF1QixtRUFBZTtBQUN0Qyw4REFBOEQsb0RBQWE7QUFDM0Usb0JBQW9CLGtEQUFXO0FBQy9CLElBQUksc0RBQWU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHlEQUFLO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxRUFBaUI7QUFDakM7QUFDQTtBQUNBOztBQUV1QyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBZG1pblxcRGVza3RvcFxcbmV3XFxjbG91ZGZsYXJlLXdvcmtlcnMtbmV4dGpzLXNhYXMtdGVtcGxhdGVcXG5vZGVfbW9kdWxlc1xcLnBucG1cXG51cXNAMi40LjNfbmV4dEAxNS4zLjVfQGJhYl8zMWRmZDI1NDRiODgxMzVmYjEzZTQ3YzNlNDgwNzRmYVxcbm9kZV9tb2R1bGVzXFxudXFzXFxkaXN0XFxjaHVuay1aT0daUktOQS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWJ1ZywgcmVuZGVyUXVlcnlTdHJpbmcgfSBmcm9tICcuL2NodW5rLTVXV1RKWUdSLmpzJztcbmltcG9ydCB7IHVzZVJvdXRlciwgdXNlU2VhcmNoUGFyYW1zIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uLmpzJztcbmltcG9ydCB7IHVzZU9wdGltaXN0aWMsIHVzZUNhbGxiYWNrLCBzdGFydFRyYW5zaXRpb24gfSBmcm9tICdyZWFjdCc7XG5cbmZ1bmN0aW9uIHVzZU51cXNOZXh0QXBwUm91dGVyQWRhcHRlcigpIHtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIGNvbnN0IHNlYXJjaFBhcmFtcyA9IHVzZVNlYXJjaFBhcmFtcygpO1xuICBjb25zdCBbb3B0aW1pc3RpY1NlYXJjaFBhcmFtcywgc2V0T3B0aW1pc3RpY1NlYXJjaFBhcmFtc10gPSB1c2VPcHRpbWlzdGljKHNlYXJjaFBhcmFtcyk7XG4gIGNvbnN0IHVwZGF0ZVVybCA9IHVzZUNhbGxiYWNrKChzZWFyY2gsIG9wdGlvbnMpID0+IHtcbiAgICBzdGFydFRyYW5zaXRpb24oKCkgPT4ge1xuICAgICAgaWYgKCFvcHRpb25zLnNoYWxsb3cpIHtcbiAgICAgICAgc2V0T3B0aW1pc3RpY1NlYXJjaFBhcmFtcyhzZWFyY2gpO1xuICAgICAgfVxuICAgICAgY29uc3QgdXJsID0gcmVuZGVyVVJMKGxvY2F0aW9uLm9yaWdpbiArIGxvY2F0aW9uLnBhdGhuYW1lLCBzZWFyY2gpO1xuICAgICAgZGVidWcoXCJbbnVxcyBxdWV1ZSAoYXBwKV0gVXBkYXRpbmcgdXJsOiAlc1wiLCB1cmwpO1xuICAgICAgY29uc3QgdXBkYXRlTWV0aG9kID0gb3B0aW9ucy5oaXN0b3J5ID09PSBcInB1c2hcIiA/IGhpc3RvcnkucHVzaFN0YXRlIDogaGlzdG9yeS5yZXBsYWNlU3RhdGU7XG4gICAgICB1cGRhdGVNZXRob2QuY2FsbChcbiAgICAgICAgaGlzdG9yeSxcbiAgICAgICAgLy8gSW4gbmV4dEAxNC4xLjAsIHVzZVNlYXJjaFBhcmFtcyBiZWNvbWVzIHJlYWN0aXZlIHRvIHNoYWxsb3cgdXBkYXRlcyxcbiAgICAgICAgLy8gYnV0IG9ubHkgaWYgcGFzc2luZyBgbnVsbGAgYXMgdGhlIGhpc3Rvcnkgc3RhdGUuXG4gICAgICAgIG51bGwsXG4gICAgICAgIFwiXCIsXG4gICAgICAgIHVybFxuICAgICAgKTtcbiAgICAgIGlmIChvcHRpb25zLnNjcm9sbCkge1xuICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XG4gICAgICB9XG4gICAgICBpZiAoIW9wdGlvbnMuc2hhbGxvdykge1xuICAgICAgICByb3V0ZXIucmVwbGFjZSh1cmwsIHtcbiAgICAgICAgICBzY3JvbGw6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9LCBbXSk7XG4gIHJldHVybiB7XG4gICAgc2VhcmNoUGFyYW1zOiBvcHRpbWlzdGljU2VhcmNoUGFyYW1zLFxuICAgIHVwZGF0ZVVybCxcbiAgICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS80N25nL251cXMvaXNzdWVzLzYwMyNpc3N1ZWNvbW1lbnQtMjMxNzA1NzEyOFxuICAgIC8vIGFuZCBodHRwczovL2dpdGh1Yi5jb20vNDduZy9udXFzL2Rpc2N1c3Npb25zLzk2MCNkaXNjdXNzaW9uY29tbWVudC0xMjY5OTE3MVxuICAgIHJhdGVMaW1pdEZhY3RvcjogM1xuICB9O1xufVxuZnVuY3Rpb24gcmVuZGVyVVJMKGJhc2UsIHNlYXJjaCkge1xuICBjb25zdCBoYXNobGVzc0Jhc2UgPSBiYXNlLnNwbGl0KFwiI1wiKVswXSA/PyBcIlwiO1xuICBjb25zdCBxdWVyeSA9IHJlbmRlclF1ZXJ5U3RyaW5nKHNlYXJjaCk7XG4gIGNvbnN0IGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICByZXR1cm4gaGFzaGxlc3NCYXNlICsgcXVlcnkgKyBoYXNoO1xufVxuXG5leHBvcnQgeyB1c2VOdXFzTmV4dEFwcFJvdXRlckFkYXB0ZXIgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-ZOGZRKNA.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/index.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/index.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLoader: () => (/* binding */ createLoader),\n/* harmony export */   createParser: () => (/* binding */ createParser),\n/* harmony export */   createSerializer: () => (/* binding */ createSerializer),\n/* harmony export */   parseAsArrayOf: () => (/* binding */ parseAsArrayOf),\n/* harmony export */   parseAsBoolean: () => (/* binding */ parseAsBoolean),\n/* harmony export */   parseAsFloat: () => (/* binding */ parseAsFloat),\n/* harmony export */   parseAsHex: () => (/* binding */ parseAsHex),\n/* harmony export */   parseAsIndex: () => (/* binding */ parseAsIndex),\n/* harmony export */   parseAsInteger: () => (/* binding */ parseAsInteger),\n/* harmony export */   parseAsIsoDate: () => (/* binding */ parseAsIsoDate),\n/* harmony export */   parseAsIsoDateTime: () => (/* binding */ parseAsIsoDateTime),\n/* harmony export */   parseAsJson: () => (/* binding */ parseAsJson),\n/* harmony export */   parseAsNumberLiteral: () => (/* binding */ parseAsNumberLiteral),\n/* harmony export */   parseAsString: () => (/* binding */ parseAsString),\n/* harmony export */   parseAsStringEnum: () => (/* binding */ parseAsStringEnum),\n/* harmony export */   parseAsStringLiteral: () => (/* binding */ parseAsStringLiteral),\n/* harmony export */   parseAsTimestamp: () => (/* binding */ parseAsTimestamp),\n/* harmony export */   useQueryState: () => (/* binding */ useQueryState),\n/* harmony export */   useQueryStates: () => (/* binding */ useQueryStates)\n/* harmony export */ });\n/* harmony import */ var _chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-6YKAEXDW.js */ \"(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-6YKAEXDW.js\");\n/* harmony import */ var _chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-5WWTJYGR.js */ \"(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/chunk-5WWTJYGR.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.3.5_@babel+core@7.2_59a685cecc86146db29560d6fd5f016c/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var mitt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mitt */ \"(ssr)/./node_modules/.pnpm/mitt@3.0.1/node_modules/mitt/dist/mitt.mjs\");\n/* __next_internal_client_entry_do_not_use__ createLoader,createParser,createSerializer,parseAsArrayOf,parseAsBoolean,parseAsFloat,parseAsHex,parseAsIndex,parseAsInteger,parseAsIsoDate,parseAsIsoDateTime,parseAsJson,parseAsNumberLiteral,parseAsString,parseAsStringEnum,parseAsStringLiteral,parseAsTimestamp,useQueryState,useQueryStates auto */ \n\n\n\n// src/loader.ts\nfunction createLoader(parsers, { urlKeys = {} } = {}) {\n    function loadSearchParams(input) {\n        if (input instanceof Promise) {\n            return input.then((i)=>loadSearchParams(i));\n        }\n        const searchParams = extractSearchParams(input);\n        const result = {};\n        for (const [key, parser] of Object.entries(parsers)){\n            const urlKey = urlKeys[key] ?? key;\n            const value = searchParams.get(urlKey);\n            result[key] = parser.parseServerSide(value ?? void 0);\n        }\n        return result;\n    }\n    return loadSearchParams;\n}\nfunction extractSearchParams(input) {\n    try {\n        if (input instanceof Request) {\n            if (input.url) {\n                return new URL(input.url).searchParams;\n            } else {\n                return new URLSearchParams();\n            }\n        }\n        if (input instanceof URL) {\n            return input.searchParams;\n        }\n        if (input instanceof URLSearchParams) {\n            return input;\n        }\n        if (typeof input === \"object\") {\n            const entries = Object.entries(input);\n            const searchParams = new URLSearchParams();\n            for (const [key, value] of entries){\n                if (Array.isArray(value)) {\n                    for (const v of value){\n                        searchParams.append(key, v);\n                    }\n                } else if (value !== void 0) {\n                    searchParams.set(key, value);\n                }\n            }\n            return searchParams;\n        }\n        if (typeof input === \"string\") {\n            if (\"canParse\" in URL && URL.canParse(input)) {\n                return new URL(input).searchParams;\n            }\n            return new URLSearchParams(input);\n        }\n    } catch (e) {\n        return new URLSearchParams();\n    }\n    return new URLSearchParams();\n}\n// src/parsers.ts\nfunction createParser(parser) {\n    function parseServerSideNullable(value) {\n        if (typeof value === \"undefined\") {\n            return null;\n        }\n        let str = \"\";\n        if (Array.isArray(value)) {\n            if (value[0] === void 0) {\n                return null;\n            }\n            str = value[0];\n        }\n        if (typeof value === \"string\") {\n            str = value;\n        }\n        return (0,_chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.safeParse)(parser.parse, str);\n    }\n    return {\n        eq: (a, b)=>a === b,\n        ...parser,\n        parseServerSide: parseServerSideNullable,\n        withDefault (defaultValue) {\n            return {\n                ...this,\n                defaultValue,\n                parseServerSide (value) {\n                    return parseServerSideNullable(value) ?? defaultValue;\n                }\n            };\n        },\n        withOptions (options) {\n            return {\n                ...this,\n                ...options\n            };\n        }\n    };\n}\nvar parseAsString = createParser({\n    parse: (v)=>v,\n    serialize: (v)=>`${v}`\n});\nvar parseAsInteger = createParser({\n    parse: (v)=>{\n        const int = parseInt(v);\n        if (Number.isNaN(int)) {\n            return null;\n        }\n        return int;\n    },\n    serialize: (v)=>Math.round(v).toFixed()\n});\nvar parseAsIndex = createParser({\n    parse: (v)=>{\n        const int = parseAsInteger.parse(v);\n        if (int === null) {\n            return null;\n        }\n        return int - 1;\n    },\n    serialize: (v)=>parseAsInteger.serialize(v + 1)\n});\nvar parseAsHex = createParser({\n    parse: (v)=>{\n        const int = parseInt(v, 16);\n        if (Number.isNaN(int)) {\n            return null;\n        }\n        return int;\n    },\n    serialize: (v)=>{\n        const hex = Math.round(v).toString(16);\n        return hex.padStart(hex.length + hex.length % 2, \"0\");\n    }\n});\nvar parseAsFloat = createParser({\n    parse: (v)=>{\n        const float = parseFloat(v);\n        if (Number.isNaN(float)) {\n            return null;\n        }\n        return float;\n    },\n    serialize: (v)=>v.toString()\n});\nvar parseAsBoolean = createParser({\n    parse: (v)=>v === \"true\",\n    serialize: (v)=>v ? \"true\" : \"false\"\n});\nfunction compareDates(a, b) {\n    return a.valueOf() === b.valueOf();\n}\nvar parseAsTimestamp = createParser({\n    parse: (v)=>{\n        const ms = parseInt(v);\n        if (Number.isNaN(ms)) {\n            return null;\n        }\n        return new Date(ms);\n    },\n    serialize: (v)=>v.valueOf().toString(),\n    eq: compareDates\n});\nvar parseAsIsoDateTime = createParser({\n    parse: (v)=>{\n        const date = new Date(v);\n        if (Number.isNaN(date.valueOf())) {\n            return null;\n        }\n        return date;\n    },\n    serialize: (v)=>v.toISOString(),\n    eq: compareDates\n});\nvar parseAsIsoDate = createParser({\n    parse: (v)=>{\n        const date = new Date(v.slice(0, 10));\n        if (Number.isNaN(date.valueOf())) {\n            return null;\n        }\n        return date;\n    },\n    serialize: (v)=>v.toISOString().slice(0, 10),\n    eq: compareDates\n});\nfunction parseAsStringEnum(validValues) {\n    return createParser({\n        parse: (query)=>{\n            const asEnum = query;\n            if (validValues.includes(asEnum)) {\n                return asEnum;\n            }\n            return null;\n        },\n        serialize: (value)=>value.toString()\n    });\n}\nfunction parseAsStringLiteral(validValues) {\n    return createParser({\n        parse: (query)=>{\n            const asConst = query;\n            if (validValues.includes(asConst)) {\n                return asConst;\n            }\n            return null;\n        },\n        serialize: (value)=>value.toString()\n    });\n}\nfunction parseAsNumberLiteral(validValues) {\n    return createParser({\n        parse: (query)=>{\n            const asConst = parseFloat(query);\n            if (validValues.includes(asConst)) {\n                return asConst;\n            }\n            return null;\n        },\n        serialize: (value)=>value.toString()\n    });\n}\nfunction parseAsJson(runtimeParser) {\n    return createParser({\n        parse: (query)=>{\n            try {\n                const obj = JSON.parse(query);\n                return runtimeParser(obj);\n            } catch  {\n                return null;\n            }\n        },\n        serialize: (value)=>JSON.stringify(value),\n        eq (a, b) {\n            return a === b || JSON.stringify(a) === JSON.stringify(b);\n        }\n    });\n}\nfunction parseAsArrayOf(itemParser, separator = \",\") {\n    const itemEq = itemParser.eq ?? ((a, b)=>a === b);\n    const encodedSeparator = encodeURIComponent(separator);\n    return createParser({\n        parse: (query)=>{\n            if (query === \"\") {\n                return [];\n            }\n            return query.split(separator).map((item, index)=>(0,_chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.safeParse)(itemParser.parse, item.replaceAll(encodedSeparator, separator), `[${index}]`)).filter((value)=>value !== null && value !== void 0);\n        },\n        serialize: (values)=>values.map((value)=>{\n                const str = itemParser.serialize ? itemParser.serialize(value) : String(value);\n                return str.replaceAll(separator, encodedSeparator);\n            }).join(separator),\n        eq (a, b) {\n            if (a === b) {\n                return true;\n            }\n            if (a.length !== b.length) {\n                return false;\n            }\n            return a.every((value, index)=>itemEq(value, b[index]));\n        }\n    });\n}\n// src/serializer.ts\nfunction createSerializer(parsers, { clearOnDefault = true, urlKeys = {} } = {}) {\n    function serialize(arg1BaseOrValues, arg2values = {}) {\n        const [base, search] = isBase(arg1BaseOrValues) ? splitBase(arg1BaseOrValues) : [\n            \"\",\n            new URLSearchParams()\n        ];\n        const values = isBase(arg1BaseOrValues) ? arg2values : arg1BaseOrValues;\n        if (values === null) {\n            for(const key in parsers){\n                const urlKey = urlKeys[key] ?? key;\n                search.delete(urlKey);\n            }\n            return base + (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.renderQueryString)(search);\n        }\n        for(const key in parsers){\n            const parser = parsers[key];\n            const value = values[key];\n            if (!parser || value === void 0) {\n                continue;\n            }\n            const urlKey = urlKeys[key] ?? key;\n            const isMatchingDefault = parser.defaultValue !== void 0 && (parser.eq ?? ((a, b)=>a === b))(value, parser.defaultValue);\n            if (value === null || (parser.clearOnDefault ?? clearOnDefault ?? true) && isMatchingDefault) {\n                search.delete(urlKey);\n            } else {\n                search.set(urlKey, parser.serialize(value));\n            }\n        }\n        return base + (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.renderQueryString)(search);\n    }\n    return serialize;\n}\nfunction isBase(base) {\n    return typeof base === \"string\" || base instanceof URLSearchParams || base instanceof URL;\n}\nfunction splitBase(base) {\n    if (typeof base === \"string\") {\n        const [path = \"\", ...search] = base.split(\"?\");\n        return [\n            path,\n            new URLSearchParams(search.join(\"?\"))\n        ];\n    } else if (base instanceof URLSearchParams) {\n        return [\n            \"\",\n            new URLSearchParams(base)\n        ];\n    } else {\n        return [\n            base.origin + base.pathname,\n            new URLSearchParams(base.searchParams)\n        ];\n    }\n}\nvar emitter = (0,mitt__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n// src/useQueryState.ts\nfunction useQueryState(key, { history = \"replace\", shallow = true, scroll = false, throttleMs = _chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.FLUSH_RATE_LIMIT_MS, parse = (x)=>x, serialize = String, eq = (a, b)=>a === b, defaultValue = void 0, clearOnDefault = true, startTransition } = {\n    history: \"replace\",\n    scroll: false,\n    shallow: true,\n    throttleMs: _chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.FLUSH_RATE_LIMIT_MS,\n    parse: (x)=>x,\n    serialize: String,\n    eq: (a, b)=>a === b,\n    clearOnDefault: true,\n    defaultValue: void 0\n}) {\n    const adapter = (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.useAdapter)();\n    const initialSearchParams = adapter.searchParams;\n    const queryRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(initialSearchParams?.get(key) ?? null);\n    const [internalState, setInternalState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        \"useQueryState.useState\": ()=>{\n            const queuedQuery = (0,_chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.getQueuedValue)(key);\n            const query = queuedQuery === void 0 ? initialSearchParams?.get(key) ?? null : queuedQuery;\n            return query === null ? null : (0,_chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.safeParse)(parse, query, key);\n        }\n    }[\"useQueryState.useState\"]);\n    const stateRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(internalState);\n    (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.debug)(\"[nuqs `%s`] render - state: %O, iSP: %s\", key, internalState, initialSearchParams?.get(key) ?? null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useQueryState.useEffect\": ()=>{\n            const query = initialSearchParams?.get(key) ?? null;\n            if (query === queryRef.current) {\n                return;\n            }\n            const state = query === null ? null : (0,_chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.safeParse)(parse, query, key);\n            (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.debug)(\"[nuqs `%s`] syncFromUseSearchParams %O\", key, state);\n            stateRef.current = state;\n            queryRef.current = query;\n            setInternalState(state);\n        }\n    }[\"useQueryState.useEffect\"], [\n        initialSearchParams?.get(key),\n        key\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useQueryState.useEffect\": ()=>{\n            function updateInternalState({ state, query }) {\n                (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.debug)(\"[nuqs `%s`] updateInternalState %O\", key, state);\n                stateRef.current = state;\n                queryRef.current = query;\n                setInternalState(state);\n            }\n            (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.debug)(\"[nuqs `%s`] subscribing to sync\", key);\n            emitter.on(key, updateInternalState);\n            return ({\n                \"useQueryState.useEffect\": ()=>{\n                    (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.debug)(\"[nuqs `%s`] unsubscribing from sync\", key);\n                    emitter.off(key, updateInternalState);\n                }\n            })[\"useQueryState.useEffect\"];\n        }\n    }[\"useQueryState.useEffect\"], [\n        key\n    ]);\n    const update = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useQueryState.useCallback[update]\": (stateUpdater, options = {})=>{\n            let newValue = isUpdaterFunction(stateUpdater) ? stateUpdater(stateRef.current ?? defaultValue ?? null) : stateUpdater;\n            if ((options.clearOnDefault ?? clearOnDefault) && newValue !== null && defaultValue !== void 0 && eq(newValue, defaultValue)) {\n                newValue = null;\n            }\n            const query = (0,_chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.enqueueQueryStringUpdate)(key, newValue, serialize, {\n                // Call-level options take precedence over hook declaration options.\n                history: options.history ?? history,\n                shallow: options.shallow ?? shallow,\n                scroll: options.scroll ?? scroll,\n                throttleMs: options.throttleMs ?? throttleMs,\n                startTransition: options.startTransition ?? startTransition\n            });\n            emitter.emit(key, {\n                state: newValue,\n                query\n            });\n            return (0,_chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.scheduleFlushToURL)(adapter);\n        }\n    }[\"useQueryState.useCallback[update]\"], [\n        key,\n        history,\n        shallow,\n        scroll,\n        throttleMs,\n        startTransition,\n        adapter.updateUrl,\n        adapter.getSearchParamsSnapshot,\n        adapter.rateLimitFactor\n    ]);\n    return [\n        internalState ?? defaultValue ?? null,\n        update\n    ];\n}\nfunction isUpdaterFunction(stateUpdater) {\n    return typeof stateUpdater === \"function\";\n}\nvar defaultUrlKeys = {};\nfunction useQueryStates(keyMap, { history = \"replace\", scroll = false, shallow = true, throttleMs = _chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.FLUSH_RATE_LIMIT_MS, clearOnDefault = true, startTransition, urlKeys = defaultUrlKeys } = {}) {\n    const stateKeys = Object.keys(keyMap).join(\",\");\n    const resolvedUrlKeys = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useQueryStates.useMemo[resolvedUrlKeys]\": ()=>Object.fromEntries(Object.keys(keyMap).map({\n                \"useQueryStates.useMemo[resolvedUrlKeys]\": (key)=>[\n                        key,\n                        urlKeys[key] ?? key\n                    ]\n            }[\"useQueryStates.useMemo[resolvedUrlKeys]\"]))\n    }[\"useQueryStates.useMemo[resolvedUrlKeys]\"], [\n        stateKeys,\n        JSON.stringify(urlKeys)\n    ]);\n    const adapter = (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.useAdapter)();\n    const initialSearchParams = adapter.searchParams;\n    const queryRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n    const defaultValues = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useQueryStates.useMemo[defaultValues]\": ()=>Object.fromEntries(Object.keys(keyMap).map({\n                \"useQueryStates.useMemo[defaultValues]\": (key)=>[\n                        key,\n                        keyMap[key].defaultValue ?? null\n                    ]\n            }[\"useQueryStates.useMemo[defaultValues]\"]))\n    }[\"useQueryStates.useMemo[defaultValues]\"], [\n        Object.values(keyMap).map({\n            \"useQueryStates.useMemo[defaultValues]\": ({ defaultValue })=>defaultValue\n        }[\"useQueryStates.useMemo[defaultValues]\"]).join(\",\")\n    ]);\n    const [internalState, setInternalState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        \"useQueryStates.useState\": ()=>{\n            const source = initialSearchParams ?? new URLSearchParams();\n            return parseMap(keyMap, urlKeys, source).state;\n        }\n    }[\"useQueryStates.useState\"]);\n    const stateRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(internalState);\n    (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.debug)(\"[nuq+ `%s`] render - state: %O, iSP: %s\", stateKeys, internalState, initialSearchParams);\n    if (Object.keys(queryRef.current).join(\"&\") !== Object.values(resolvedUrlKeys).join(\"&\")) {\n        const { state, hasChanged } = parseMap(keyMap, urlKeys, initialSearchParams, queryRef.current, stateRef.current);\n        if (hasChanged) {\n            stateRef.current = state;\n            setInternalState(state);\n        }\n        queryRef.current = Object.fromEntries(Object.values(resolvedUrlKeys).map((urlKey)=>[\n                urlKey,\n                initialSearchParams?.get(urlKey) ?? null\n            ]));\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useQueryStates.useEffect\": ()=>{\n            const { state, hasChanged } = parseMap(keyMap, urlKeys, initialSearchParams, queryRef.current, stateRef.current);\n            if (hasChanged) {\n                stateRef.current = state;\n                setInternalState(state);\n            }\n        }\n    }[\"useQueryStates.useEffect\"], [\n        Object.values(resolvedUrlKeys).map({\n            \"useQueryStates.useEffect\": (key)=>`${key}=${initialSearchParams?.get(key)}`\n        }[\"useQueryStates.useEffect\"]).join(\"&\")\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useQueryStates.useEffect\": ()=>{\n            function updateInternalState(state) {\n                (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.debug)(\"[nuq+ `%s`] updateInternalState %O\", stateKeys, state);\n                stateRef.current = state;\n                setInternalState(state);\n            }\n            const handlers = Object.keys(keyMap).reduce({\n                \"useQueryStates.useEffect.handlers\": (handlers2, stateKey)=>{\n                    handlers2[stateKey] = ({\n                        \"useQueryStates.useEffect.handlers\": ({ state, query })=>{\n                            const { defaultValue } = keyMap[stateKey];\n                            const urlKey = resolvedUrlKeys[stateKey];\n                            stateRef.current = {\n                                ...stateRef.current,\n                                [stateKey]: state ?? defaultValue ?? null\n                            };\n                            queryRef.current[urlKey] = query;\n                            (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.debug)(\"[nuq+ `%s`] Cross-hook key sync %s: %O (default: %O). Resolved: %O\", stateKeys, urlKey, state, defaultValue, stateRef.current);\n                            updateInternalState(stateRef.current);\n                        }\n                    })[\"useQueryStates.useEffect.handlers\"];\n                    return handlers2;\n                }\n            }[\"useQueryStates.useEffect.handlers\"], {});\n            for (const stateKey of Object.keys(keyMap)){\n                const urlKey = resolvedUrlKeys[stateKey];\n                (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.debug)(\"[nuq+ `%s`] Subscribing to sync for `%s`\", stateKeys, urlKey);\n                emitter.on(urlKey, handlers[stateKey]);\n            }\n            return ({\n                \"useQueryStates.useEffect\": ()=>{\n                    for (const stateKey of Object.keys(keyMap)){\n                        const urlKey = resolvedUrlKeys[stateKey];\n                        (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.debug)(\"[nuq+ `%s`] Unsubscribing to sync for `%s`\", stateKeys, urlKey);\n                        emitter.off(urlKey, handlers[stateKey]);\n                    }\n                }\n            })[\"useQueryStates.useEffect\"];\n        }\n    }[\"useQueryStates.useEffect\"], [\n        stateKeys,\n        resolvedUrlKeys\n    ]);\n    const update = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useQueryStates.useCallback[update]\": (stateUpdater, callOptions = {})=>{\n            const nullMap = Object.fromEntries(Object.keys(keyMap).map({\n                \"useQueryStates.useCallback[update].nullMap\": (key)=>[\n                        key,\n                        null\n                    ]\n            }[\"useQueryStates.useCallback[update].nullMap\"]));\n            const newState = typeof stateUpdater === \"function\" ? stateUpdater(applyDefaultValues(stateRef.current, defaultValues)) ?? nullMap : stateUpdater ?? nullMap;\n            (0,_chunk_5WWTJYGR_js__WEBPACK_IMPORTED_MODULE_3__.debug)(\"[nuq+ `%s`] setState: %O\", stateKeys, newState);\n            for (let [stateKey, value] of Object.entries(newState)){\n                const parser = keyMap[stateKey];\n                const urlKey = resolvedUrlKeys[stateKey];\n                if (!parser) {\n                    continue;\n                }\n                if ((callOptions.clearOnDefault ?? parser.clearOnDefault ?? clearOnDefault) && value !== null && parser.defaultValue !== void 0 && (parser.eq ?? ({\n                    \"useQueryStates.useCallback[update]\": (a, b)=>a === b\n                })[\"useQueryStates.useCallback[update]\"])(value, parser.defaultValue)) {\n                    value = null;\n                }\n                const query = (0,_chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.enqueueQueryStringUpdate)(urlKey, value, parser.serialize ?? String, {\n                    // Call-level options take precedence over individual parser options\n                    // which take precedence over global options\n                    history: callOptions.history ?? parser.history ?? history,\n                    shallow: callOptions.shallow ?? parser.shallow ?? shallow,\n                    scroll: callOptions.scroll ?? parser.scroll ?? scroll,\n                    throttleMs: callOptions.throttleMs ?? parser.throttleMs ?? throttleMs,\n                    startTransition: callOptions.startTransition ?? parser.startTransition ?? startTransition\n                });\n                emitter.emit(urlKey, {\n                    state: value,\n                    query\n                });\n            }\n            return (0,_chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.scheduleFlushToURL)(adapter);\n        }\n    }[\"useQueryStates.useCallback[update]\"], [\n        stateKeys,\n        history,\n        shallow,\n        scroll,\n        throttleMs,\n        startTransition,\n        resolvedUrlKeys,\n        adapter.updateUrl,\n        adapter.getSearchParamsSnapshot,\n        adapter.rateLimitFactor,\n        defaultValues\n    ]);\n    const outputState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useQueryStates.useMemo[outputState]\": ()=>applyDefaultValues(internalState, defaultValues)\n    }[\"useQueryStates.useMemo[outputState]\"], [\n        internalState,\n        defaultValues\n    ]);\n    return [\n        outputState,\n        update\n    ];\n}\nfunction parseMap(keyMap, urlKeys, searchParams, cachedQuery, cachedState) {\n    let hasChanged = false;\n    const state = Object.keys(keyMap).reduce((out, stateKey)=>{\n        const urlKey = urlKeys?.[stateKey] ?? stateKey;\n        const { parse } = keyMap[stateKey];\n        const queuedQuery = (0,_chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.getQueuedValue)(urlKey);\n        const query = queuedQuery === void 0 ? searchParams?.get(urlKey) ?? null : queuedQuery;\n        if (cachedQuery && cachedState && (cachedQuery[urlKey] ?? null) === query) {\n            out[stateKey] = cachedState[stateKey] ?? null;\n            return out;\n        }\n        hasChanged = true;\n        const value = query === null ? null : (0,_chunk_6YKAEXDW_js__WEBPACK_IMPORTED_MODULE_2__.safeParse)(parse, query, stateKey);\n        out[stateKey] = value ?? null;\n        if (cachedQuery) {\n            cachedQuery[urlKey] = query;\n        }\n        return out;\n    }, {});\n    if (!hasChanged) {\n        const keyMapKeys = Object.keys(keyMap);\n        const cachedStateKeys = Object.keys(cachedState ?? {});\n        hasChanged = keyMapKeys.length !== cachedStateKeys.length || keyMapKeys.some((key)=>!cachedStateKeys.includes(key));\n    }\n    return {\n        state,\n        hasChanged\n    };\n}\nfunction applyDefaultValues(state, defaults) {\n    return Object.fromEntries(Object.keys(state).map((key)=>[\n            key,\n            state[key] ?? defaults[key] ?? null\n        ]));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/nuqs@2.4.3_next@15.3.5_@bab_31dfd2544b88135fb13e47c3e48074fa/node_modules/nuqs/dist/index.js\n");

/***/ })

};
;